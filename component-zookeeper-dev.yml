application:
  configuration:
    input.zookeeper-quantity: "3"
    input.zookeeper-cli-port: "2181"
    input.zookeeper-elect-port: "3888"
    input.exhibitor-port: "8090"

  interfaces:
    input:
      zookeeper-quantity: "bind(zookeeper#input.zookeeper-quantity)"
      zookeeper-cli-port: "bind(zookeeper#input.zookeeper-cli-port)"
      zookeeper-elect-port: "bind(zookeeper#input.zookeeper-elect-port)"
      exhibitor-port: "bind(zookeeper#input.exhibitor-port)"
    output:
      zoo-nodes: "bind(zookeeper#result.zookeeper-nodes)"
      zoo-hosts: "bind(zookeeper#result.zookeeper-hosts)"
      zoo-ui: "bind(zookeeper#result.zookeeper-ui)"

 
  components:
    zookeeper:
      type: workflow.Instance
      interfaces:
        input:
          zookeeper-quantity: configuration(string)
          zookeeper-cli-port: configuration(string)
          zookeeper-elect-port: configuration(string)
          exhibitor-port: configuration(string)
        actions: {}
        result:
          zookeeper-hosts: publish-signal(list<string>)
          zookeeper-ui: publish-signal(list<string>)
          zookeeper-nodes: publish-signal(list<string>)
      configuration:
        configuration.workflows:
          launch:
            parameters:
              - zookeeper-quantity:
                  description: Number of servers
              - zookeeper-cli-port:
                  description: Zookeeper port for connections
              - zookeeper-elect-port:
                  description: Zookeeper port for elections
              - exhibitor-port:
                  description: Zookeeper management UI port
            steps:
              - provision:
                  action: provisionAmazonVm
                  phase: provision
                  parameters:
                    roleName: default
                    hardwareId: m1.small
                    targetQuantity: "{$.zookeeper-quantity}"
                    retryCount: 1
                    jcloudsProvider: aws-ec2
                    jcloudsEndpoint: https://ec2.us-east-1.amazonaws.com
                    jcloudsRegions: us-east-1
                    jcloudsNodeNamePrefix: component
                    jcloudsIdentity: "{$.identity}"
                    jcloudsCredential: "{$.credential}"
                    vmIdentity: ec2-user
                    imageId: us-east-1/ami-1ba18d72
                    ec2SecurityGroup: default
                  output:
                    zoo-hosts: ips
                    zoo-hosts-privatIp: privateips
              - deploy-zoo:
                  action: "chefrun"
                  phase: deploy-zoo
                  precedingPhases: [ provision ]
                  parameters:
                    isSolo: true
                    roles: [ default ]
                    runList: [ "recipe[cookbook-qubell-zookeeper]" ]
                    recipeUrl: "https://s3.amazonaws.com/qubell-zookeeper-artifacts/loky9000/component-zookeeper-dev-cookbooks-stable-17cf0bd.tar.gz" 
                    jattrs:
                      exhibitor:
                        opts:
                          port: "{$.exhibitor-port}"
                        defaultconfig:
                          client_port: "{$.zookeeper-cli-port}"
                          election_port: "{$.zookeeper-elect-port}"
                      zookeeper:
                        hosts: "{$.zoo-hosts-privatIp}"
            return:
              zookeeper-hosts:
                value: "{$.zoo-hosts}"
              zookeeper-ui:
                value: "http://{$.zoo-hosts}:{$.exhibitor-port}/exhibitor/v1/ui/index.html"
              zookeeper-nodes:
                value: "{$.zoo-hosts-privatIp}"

          destroy:
            steps:
              - destroy:
                  action: undeployEnv
